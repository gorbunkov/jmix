#
# Copyright 2020 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
menu-config.sys$Category.browse=Динамические атрибуты

# CategoryBrowse
io.jmix.dynattrui.screen.category/browseCaption=Динамические атрибуты
io.jmix.dynattrui.screen.category/categoriesTable.applyChanges=Применить изменения
io.jmix.dynattrui.screen.category/notification.changesApplied=Изменения применены

# CategoryEdit
io.jmix.dynattrui.screen.category/editorCaption=Редактирование категории
io.jmix.dynattrui.screen.category/mainTab.caption=Общее
io.jmix.dynattrui.screen.category/attributesLocationTab.caption=Расположение атрибутов
io.jmix.dynattrui.screen.category/nameField.required=Заполните поле "Название"
io.jmix.dynattrui.screen.category/entityTypeField.required=Заполните поле "Тип сущности"
io.jmix.dynattrui.screen.category/localizationTab.caption=Локализация

# CategoryAttrsFragment
io.jmix.dynattrui.screen.categoryattr/categoryAttrsTable.defaultValue=Значение по умолчанию
io.jmix.dynattrui.screen.categoryattr/categoryAttrsTable.currentDate=Текущая дата
io.jmix.dynattrui.screen.categoryattr/categoryAttrsTable.entityNotFound=Сущность не найдена
io.jmix.dynattrui.screen.categoryattr/classNotFound=Класс не найден

# CategoryAttrsEdit
io.jmix.dynattrui.screen.categoryattr/editorCaption=Редактирование атрибута
io.jmix.dynattrui.screen.categoryattr/mainTab.caption=Общее
io.jmix.dynattrui.screen.categoryattr/nameField.required=Заполните поле "Название"
io.jmix.dynattrui.screen.categoryattr/codeField.required=Заполните поле "Код"
io.jmix.dynattrui.screen.categoryattr/dataTypeField.required=Заполните поле "Тип"
io.jmix.dynattrui.screen.categoryattr/enumerationField.required=Заполните поле "Перечисление"
io.jmix.dynattrui.screen.categoryattr/lookupField.contextHelp=Позволяет вам выбирать значения аттрибута из выпадающего списка. \
  Список допустимых значений можно настроить на вкладке "Вычислимые значения и опции". \
  Здесь же вы можете настроить where и join ограничения для аттрибута типа сущность.
io.jmix.dynattrui.screen.categoryattr/entityClassField.required=Заполните поле "Тип сущности"
io.jmix.dynattrui.screen.categoryattr/screenField.required=Заполните поле "Экран выбора сущности"
io.jmix.dynattrui.screen.categoryattr/widthField.validationMessage=Поле "Ширина" указано в некорректном формате
io.jmix.dynattrui.screen.categoryattr/rowsCountField.validationMessage=Поле "Количество строк" должно быть числом от 1 до 40
io.jmix.dynattrui.screen.categoryattr/calculatedValuesAndOptionsTab.caption=Вычислимые значения и опции
io.jmix.dynattrui.screen.categoryattr/constraintWizardField.caption=Мастер создания ограничения
io.jmix.dynattrui.screen.categoryattr/selectEntityType=Select entity type
io.jmix.dynattrui.screen.categoryattr/minGreaterThanMax=Минимальное значение не может быть больше максимального
io.jmix.dynattrui.screen.categoryattr/defaultLessThanMin=Значение по умолчанию не может быть меньше минимального
io.jmix.dynattrui.screen.categoryattr/defaultGreaterThanMax=Значение по умолчанию не может быть больше максимального
io.jmix.dynattrui.screen.categoryattr/uniqueName=Атрибут с таким названием уже существует
io.jmix.dynattrui.screen.categoryattr/uniqueCode=Атрибут с таким кодом уже существует
io.jmix.dynattrui.screen.categoryattr/localizationTab.caption=Локализация
io.jmix.dynattrui.screen.categoryattr/visibilityTab.caption=Видимость
io.jmix.dynattrui.screen.categoryattr/targetScreensTable.create=Добавить экран
io.jmix.dynattrui.screen.categoryattr/targetScreensTable.remove=Удалить экран
io.jmix.dynattrui.screen.categoryattr/optionsLoaderGroovyScript=Groovy скрипт загрузки списка значений
io.jmix.dynattrui.screen.categoryattr/optionsLoaderGroovyScriptHelp=Скрипт позволяет загрузить допустимый список значений \
  для динамического аттрибута в виде <code>java.util.List</code>.\
  <br/>Сущность вместе с динамическими аттрибутами доступна в скрипте \
  по следующей <code>entity</code> переменной.\
  <br/>\
  <br/>Например:\
  <br/><code>return ['code_1', 'code_2', entity.code]</code>
io.jmix.dynattrui.screen.categoryattr/optionsLoaderSqlScript=SQL скрипт загрузки списка значений
io.jmix.dynattrui.screen.categoryattr/optionsLoaderSqlScriptHelp=Скрипт позволяет загрузить допустимый список значений\
  <br/>для динамического аттрибута в виде <code>java.util.List</code>.\
  <br/>Значения динамических атрибутов доступны в скрипте через переменную <code>entity</code>.\
  <br/>\
  <br/>Например:\
  <br/><code>select street from db_Address e where e.strName = ${entity.+&lt;dynamicAttrCode&gt;}</code>\
  <br/>где &lt;dynamicAttrCode&gt; - код соответствующего динамического атрибута
io.jmix.dynattrui.screen.categoryattr/joinClause=Оператор Join
io.jmix.dynattrui.screen.categoryattr/joinClauseHelp=Значение данного поля добавляется в выражение "from" запроса. Оно должно начинаться с запятой или слов "join" или "left join".\
  <br/>Значения динамических атрибутов доступны в скрипте через переменную <code>entity</code>:\
  <br/>${entity.+&lt;dynamicAttrCode&gt;}, где &lt;dynamicAttrCode&gt; - код соответствующего динамического атрибута\
  <br/>В качестве алиаса извлекаемой сущности необходимо использовать строку {E}. При выполнении запросов она будет заменена на реальный алиас, заданный в запросе.\
  <br/>\
  <br/>Например:\
  <br/><code>join {E}.seller s</code>
io.jmix.dynattrui.screen.categoryattr/whereClause=Оператор Where
io.jmix.dynattrui.screen.categoryattr/whereClauseHelp=Значение данного поля добавляется в выражение "where" запроса по условию "and" (И). Само слово "where" писать не нужно, оно будет добавлено автоматически, даже если исходный запрос его не содержал.\
  <br/>В качестве алиаса извлекаемой сущности необходимо использовать строку {E}. При выполнении запросов она будет заменена на реальный алиас, заданный в запросе.\
  <br/>Значения динамических атрибутов доступны в скрипте через переменную <code>entity</code>.\
  <br/>\
  <br/>Например:\
  <br/><code>{E}.salary > ${entity.+&lt;dynamicAttrCode&gt;} and {E}.department = 'abc'</code><br/>\
  где &lt;dynamicAttrCode&gt; - код соответствующего динамического атрибута
io.jmix.dynattrui.screen.categoryattr/validationScript=Скрипт валидации
io.jmix.dynattrui.screen.categoryattr/validationScriptHelp=Позволяет применить пользовательский Groovy скрипт для проверки валидности значения.\
  <br/>В случае неуспешной валидации, скрипт должен вернуть сообщение об ошибке. В противном случае \
  скрипт не должен возвращать ничего или может вернуть <code>null</code>. \
  <br/>Проверяемое значение доступно в скрипте по переменной <code>value</code>. \
  Для сообщения об ошибке используется Groovy строка, \
  ключ '$value' может быть использован в сообщении для формирования результата.\
  <br/>\
  <br/>Пример:\
  <br/><code>if (!value.startsWith("correctValue")) return "the value '\\$value' is incorrect"</code>
io.jmix.dynattrui.screen.categoryattr/recalculationScript=Скрипт пересчета
io.jmix.dynattrui.screen.categoryattr/recalculationScriptHelp=Groovy скрипт, используемый для пересчета значения атрибута.\
  <br/>Скрипт должен возвращать новое значение параметра. В скрипте могут использоваться переменные \
  <code>entity</code> и <code>dynamicAttributes</code>.\
  <br/><code>entity</code> - редактируемая сущность. \
  <br/><code>dynamicAttributes</code> - <code>Map<String, Object></code>, где key - код атрибута, \
  value - значение динамического атрибута.\
  <br/>Скрипт выполняется каждый раз после изменения значения одного из атрибутов, от которых зависит данный атрибут.\
  <br/>\
  <br/>Если скрипт задан, то поле ввода для атрибута будет нередактируемым.\
  <br/>\
  <br/>Пример:\
  <br/><code>if (entity.getValue("+testStringAttr") == null) return 1 else return entity.getValue("+testStringAttr").length()</code>

# AttributeEnumerationScreen
io.jmix.dynattrui.screen.categoryattr/enumerationScreen.caption=Редактирование перечисления
io.jmix.dynattrui.screen.categoryattr/localizationBox.caption=Локализация
io.jmix.dynattrui.screen.categoryattr/localizedEnumValuesDataGrid.add=Добавить

# AttributeLocalizationFragment
io.jmix.dynattrui.screen.localization/localizedValuesDataGrid.columnDescription=Кликните дважды, чтобы отредактировать значение

# AttributeLocationFragment
io.jmix.dynattrui.screen.location/columnsCountLookupField.caption=Количество столбцов
io.jmix.dynattrui.screen.location/saveConfigurationBtn.caption=Сохранить конфигурацию
io.jmix.dynattrui.screen.location/sourceDataGrid.sourceColumn.caption=Атрибуты
io.jmix.dynattrui.screen.location/targetDataGrid.column.caption=Столбец

# ScreenAndComponent
io.jmix.dynattrui.impl.model/ScreenAndComponent.screen=Экран
io.jmix.dynattrui.impl.model/ScreenAndComponent.component=Идентификатор компонента

# AttributeLocalizedValue
io.jmix.dynattrui.impl.model/AttributeLocalizedValue.name=Название
io.jmix.dynattrui.impl.model/AttributeLocalizedValue.description=Описание
io.jmix.dynattrui.impl.model/AttributeLocalizedValue.language=Язык
io.jmix.dynattrui.impl.model/AttributeLocalizedValue.locale=Локализация

# AttributeLocalizedEnumValue
io.jmix.dynattrui.impl.model/AttributeLocalizedEnumValue.value=Значение
io.jmix.dynattrui.impl.model/AttributeLocalizedEnumValue.localizedValues=Локализованные значения